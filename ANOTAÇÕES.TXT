ANOTAÇÕES DO PROJETO:

-- PARA RECEBER O QUE ESTÁ SENDO DIGITADO DE UM INPUT, PODEMOS UTILIZAR UM getElementById, OU O querySelector

-- PODEMOS PERCORRER UMA LISTA DE DIFERENTES FORMAS, COM O FOR, FOREACH E O MAP. GERALMENTE NO JAVASCRIPT
IREMOS UTIILZAR ELE. O MAP PERCORRE TODOS OS ELEMENTOS E DENTRO DELE EU POSSO ACESSAR OS ELEMENTOS QUE ESTÃO PASSANDO.
POR EXEMPLO: PASSOU O PRIMEIRO ELEMENTO, EU POSSO TER ACESSO AO PRIMEIRO ELEMENTO, PASSOU A SEGUNDA EU POSSO TER ACESSO 
AOS ELEMENTOS DA SEGUNDA.

SINTAXE: lista.map((parametro)={
    log('elemento da lista' + parametro)
})
O MAP RECEBE POR PARAMETRO UMA FUNCÃO ANÔNIMA

-- PARA CRIAR UMA LI NO JAVASCRIPT É PRECISO CRIAR UMA VARIAVEL PARA QUE ESSA VARIÁVEL CRIE UM LEMENTO li
PARA ISSO UTILIZAMOS O 'createElement' ELE CRIA UM ELEMENTO HTML NA TELA MAS PARA ISSO TEMOS QUE PASSAR ENTRE 
PARENTESES O NOME DO ELEMENTO HTML. 

SINTAXE: let liElement = document.createElement('li')

PARA TRANNSFORMAR OS VALORES DA LISTA EM UM TEXTO UTILIZAMOS O 'createTextNode' E PASSAMOS POR PARAMETRO O 
NOME DO PARAMETRO QUE UTIILIZAMOS PARA PERCORRER A LISTA.

-- PARA ADICIONAR UM VALOR DE UMA LISTA EM UM ELEMENTO HTML UTILIZAMOS O 'appendChild'
ELE BASICAMENTE ADICIONA UM ADICIONA UM FILHO, OU SEJA, ELE ADICONA UM VALOR. PARA ISSO TEMOS
QUE PASSAR ENTRE PARENTESES O NOME DO PARAMETRO QUE PERCORREU A LISTA.

-- PARA REMOVER ELEMENTOS ATRAVÉS DO INDICE (POSICAO DO ELEMENTO), PODEMOS UTILIZAR O MÉTODO 'splice' e a quantidade
da profundidade, ou seja, o tamanho do elemento. 

SINTAXE: lista.splice(1, 1)

OBS: PARA CRIAR A FUNCIONALIDADE DE EXCLUIR PODEMOS PASSAR A FUNCÃO 'indexOf', pois ele recupera a posicao do array
mas para isso temos que passar por parametro o nome do elemento que ele quer buscar para saber a posicao dele, se
não tiver ele retorna '-1'

QUANDO QUEREMOS PASSAR ATRIBUTOS PARA NOSSOS ELEMENTOS HTML utilizamos o setAtribute

SINTAXE: PASSAR O href PARA O 'a': linkElement.setAtribute('href', '#') PARA NÃO LEVAR PARA OUTRA PÁGINA.

O setAtribute SERVE TAMBÉM PARA ADICIONARMOS FUNÇÕES PARA OS ELEMENTOS:

SINTAXE: linkElement.setAtribute('onclick - EVENTO', 'excluirTarefa - AÇÃO')

-- NO NAVEGADOR TEMOS UMA FUNCIONALIDADE IMPORTANTE QUE PODE NOS AJUDAR NO DESENVOLVIMENTO, O 'localStorage'. NELE PODEMOS
 DEIXAR DADOS SALVOS PARA NOSSAS APLICAÇÕES. QUANDO FAZEMOS APLICAÇÕES QUE PRECISAM GUARDAR DADOS E PRECISAMOS QUE ELES NÃO
 SEJAM DELETADOS, UTILIZAMOS ELE. ELE NÃO SUBSTITUI UM BANCO DE DADOS.

 ONDE ENCONTRAR:  1º ctrl + shift + j;
                  2º APLICATION OU APLICAÇÃO;
                  3º localStorage OU Armazenamento local;
                  4º ELE POSSUI UM: 'CHAVE VALOR'

PARA UTILIZAR O localStorage TEMOS QUE CRIAR UMA FUNCÇÃO QUE SE CONECTE COM ELE:
1º CRIAR UMA FUNÇÃO;
2º CHAMAR O ATRIBUTO: localStorage.setItem('@chave unica', 'valor que queremos salvar') - setItem SERVE PARA SALVAR UM ITEM NO localStorage
2.1º NÃO CONSEGUIMOS SALVAR UMA LISTA NO localStorage POIS TEMOS QUE SALVAR UM VALOR EM STRING, TEMOS QUE TRANSFORMAR EM UM STRING E 
DEPOIS EM UM ARRAY:
    SINTAXE: localStorage.setItem('@listaTarefas', JSON.stringfy(tarefas)) -> CONVERTENDO UMA LISTA EM UMA STRING, E JÁ CONSEGUIMOS SALVAR
    NO localStorage.